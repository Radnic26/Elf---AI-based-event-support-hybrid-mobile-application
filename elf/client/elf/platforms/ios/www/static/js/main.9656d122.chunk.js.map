{"version":3,"sources":["utils/checkLocalStorage.js","actions/actions.js","actions/types.js","dbStores/MessageStore.js","dbStores/ResponseStore.js","components/Chat/MessageForm/MessageForm.js","components/Chat/Typing/Typing.js","components/Chat/Message/Message.js","components/Chat/Chat/Chat.js","components/Account/Account.js","components/Settings/SettingsItem.js","dbStores/ConceptStore.js","components/AI/CategoryForm/CategoryForm.js","components/AI/SubcategoryForm/SubcategoryForm.js","components/AI/ExampleForm/ExampleForm.js","components/AI/ConceptsForm/ConceptsForm.js","components/Home/Home.js","components/App/App.js","dbStores/UserStore.js","components/Auth/Login.js","components/Auth/Register.js","serviceWorker.js","reducers/reducer.js","components/LinearProgress/LinearProgress.js","index.js","statics/constants.js"],"names":["jwt","require","STATIC","module","exports","token","localStorage","getItem","verify","tokenSecret","id","addMessage","message","isTyping","type","payload","chatBubbleId","content","context","MessageStore","this","emitter","EventEmitter","userId","fetch","ngrokServer","method","headers","body","JSON","stringify","emit","console","warn","response","json","data","ResponseStore","reply","question","Object","keys","length","values","solution","index","Math","floor","random","err","MessageForm","props","state","messageStore","responseStore","handleChange","evt","setState","target","name","value","sendMessage","currentUser","getResponse","addListener","removeCurrentListener","classes","className","Grid","container","grid","style","minHeight","item","xs","TextField","size","variant","placeholder","onChange","fullWidth","align","Button","buttonGrid","color","onClick","React","Component","connect","withStyles","theme","root","margin","spacing","padding","display","bottom","button","minWidth","width","marginLeft","Typing","Messages","messages","bubbleStyles","text","fontSize","chatbubble","borderRadius","user","Account","textAlign","marginTop","alt","src","photoURL","height","username","email","SettingsItem","ConceptStore","categories","subcategories","abortController","AbortController","category","error","signal","subcategory","categoryId","example","subcategoryId","CategoryForm","selectedCategory","conceptStore","add","addCategory","window","location","reload","SubcategoryForm","selectedCategoryId","handleCategorySelectChange","handleSubcategoryInputChange","newSubcategory","addSubcategory","getAllCategories","abort","categoriesList","map","i","key","ExampleForm","selectedSubcategoryId","handleSubcategorySelectChange","handleInputChange","newExample","log","addExample","getAllSubcategories","subcategoriesList","ConceptsForm","useStyles","makeStyles","drawer","breakpoints","up","flexShrink","mixins","toolbar","appBar","menuButton","marginRight","drawerPaper","flexGrow","windows","useTheme","useState","mobileOpen","setMobileOpen","chatItem","setChatItem","accountItem","setAccountItem","settingsItem","setSettingsItem","handleDrawerToggle","Divider","List","ListItem","ListItemIcon","ListItemText","primary","removeItem","undefined","document","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","UserStore","users","loggedUser","responseStatus","result","hasOwnProperty","errors","status","setItem","tokenValue","Login","password","isValid","isLoading","loginToken","userStore","login","Container","component","maxWidth","Avatar","avatar","form","noValidate","label","disabled","submit","CircularProgress","circularProgress","Link","href","flexDirection","alignItems","backgroundColor","palette","secondary","main","blue","top","Register","fullName","confirmPassword","isPasswordValid","md5","addUser","history","push","sm","justify","Boolean","hostname","match","initialUserState","initialMessageState","rootReducer","combineReducers","action","concat","Message","marginBlockEnd","LinearBuffer","completed","setCompleted","buffer","setBuffer","progress","useRef","useEffect","current","diff","diff2","timer","setInterval","clearInterval","LinearProgress","valueBuffer","store","createStore","composeWithDevTools","Root","checkForUserToken","getLoggedUser","firstMessage","setUser","clearUser","path","exact","RootWithAuth","withRouter","renderReactDom","ReactDOM","render","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9656d122.chunk.js","sourcesContent":["const jwt = require('jsonwebtoken')\nconst STATIC = require('../statics/constants')\n\nmodule.exports = () => {\n    const token = localStorage.getItem('userToken')\n    if(token !== null) {\n        return jwt.verify(token, STATIC.tokenSecret).id\n    }\n    else {\n        return false\n    }\n}","import * as actionTypes from './types'\n\nexport const setUser = user => {\n    return {\n        type: actionTypes.SET_USER,\n        payload: {\n            currentUser: user\n        }\n    }\n}\n\nexport const clearUser = () => {\n    return {\n        type: actionTypes.CLEAR_USER\n    }\n}\n\nexport const addMessage = (message, isTyping) => {\n    return {\n        type: actionTypes.ADD_MESSAGE,\n        payload: {\n            chatBubbleId: message.chatBubbleId,\n            message: message.content,\n            context: message.context,\n            isTyping: isTyping\n        }\n    }\n}","export const SET_USER = 'SET_USER'\nexport const CLEAR_USER = 'CLEAR_USER'\n\nexport const ADD_MESSAGE = 'ADD_MESSAGE'","import { EventEmitter } from 'fbemitter'\nconst STATIC = require('../statics/constants')\n\nclass MessageStore {\n    constructor() {\n        this.message = []\n        this.emitter = new EventEmitter()\n    }\n\n    async addMessage(userId, message) {\n        \n        try {\n            await fetch(`${STATIC.ngrokServer}/chat/message/user/${userId}`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('userToken')\n                },\n                body: JSON.stringify(message),\n            })\n            this.emitter.emit('ADD_MESSAGE_SUCCESS')\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('ADD_MESSAGE_ERROR')\n        }\n    }\n\n    async getMessage() {\n        try{\n            let response = await fetch(`${STATIC.ngrokServer}/chat/messages`)\n            let data = await response.json()\n            this.message = data\n        } catch(err) {\n            console.warn(err)\n        }\n    }\n}\n\nexport default MessageStore","import { EventEmitter } from 'fbemitter'\nconst STATIC = require('../statics/constants')\n\nclass ResponseStore {\n    constructor() {\n        this.emitter = new EventEmitter()\n        this.reply = []\n    }\n\n    async getResponse(question) {\n        let response = await fetch(`${STATIC.ngrokServer}/chat/response`, {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('userToken')\n            },\n            body: JSON.stringify(question)\n        })\n        let data = await response.json()\n        if (Object.keys(data).length === 25) {\n            this.reply = data\n        }\n        else {\n            if (Object.values(data.solution)[0].length > 1) {\n                let index = Math.floor(Math.random() * data.solution.length)\n                this.reply = data.solution[index]\n            }\n            else {\n                this.reply = data.solution\n            }\n        }\n        this.emitter.emit('GET_RESPONSE_SUCCESS')\n    } catch(err) {\n        console.warn(err)\n        this.emitter.emit('GET_RESPONSE_ERROR')\n    }\n}\n\nexport default ResponseStore","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles'\nimport { TextField, Button, Grid } from '@material-ui/core'\nimport SendIcon from '@material-ui/icons/Send';\nimport './MessageForm.css'\nimport { connect } from 'react-redux'\nimport { addMessage } from './../../../actions/actions'\nimport MessageStore from './../../../dbStores/MessageStore'\nimport ResponseStore from './../../../dbStores/ResponseStore'\n\nconst useStyles = theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  grid: {\n    padding: '10px',\n    display: 'flex',\n    bottom: 0\n  },\n  button: {\n    minWidth: 10\n  },\n  buttonGrid: {\n    width: '20px',\n    marginLeft: '10px'\n  }\n})\n\nclass MessageForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      question: '',\n      response: []\n    }\n\n    this.messageStore = new MessageStore()\n    this.responseStore = new ResponseStore()\n\n    this.handleChange = (evt) => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      })\n    }\n\n    this.sendMessage = () => {\n      if (this.state.question !== \"\") {\n        let message = {\n          chatBubbleId: 0,\n          content: this.state.question,\n          context: 'test'\n        }\n\n        this.setState({\n          question: ''\n        })\n\n        this.props.addMessage(message, true)\n\n        this.messageStore.addMessage(this.props.currentUser.id, message);\n\n        this.responseStore.getResponse(message)\n\n        this.responseStore.emitter.addListener('GET_RESPONSE_SUCCESS', () => {\n          let response = {\n            chatBubbleId: 1,\n            content: this.responseStore.reply,\n            context: message.context\n          }\n          this.props.addMessage(response, false)\n          this.responseStore.emitter.removeCurrentListener()\n        })\n      }\n      else {}\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className=\"Form\">\n        <Grid container className={classes.grid} style={{ minHeight: '100%' }}>\n          <Grid item xs={9}>\n            <TextField\n              name=\"question\"\n              id=\"outlined-basic-email\"\n              size=\"small\"\n              variant=\"outlined\"\n              placeholder=\"Adaugă un mesaj\"\n              value={this.state.question}\n              onChange={this.handleChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={1} align=\"right\" >\n            <Button\n              className={classes.buttonGrid}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={this.sendMessage} >\n              <SendIcon />\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { addMessage })(withStyles(useStyles)(MessageForm))","import React from 'react'\nimport './Typing.css'\n\nconst Typing = () => (\n    <div className=\"typing\">\n        <div className=\"typing_dot\"></div>\n        <div className=\"typing_dot\"></div>\n        <div className=\"typing_dot\"></div>\n    </div>\n)\n\nexport default Typing","import React from \"react\"\nimport { ChatFeed } from 'react-chat-ui'\nimport './Message.css'\nimport Typing from '../Typing/Typing'\n\nconst Messages = (props) => {\n  const { messages, isTyping } = props\n  return (\n    <div className=\"Messages\">\n      <ChatFeed\n        messages={ messages }\n        bubbleStyles={\n          {\n            text: {\n              fontSize: 17\n            },\n            chatbubble: {\n              borderRadius: 20,\n              padding: 10\n            }\n          }\n        }\n      />\n      {isTyping ? <Typing /> : ''}\n    </div>\n  )\n}\n\nexport default Messages\n","import React from 'react'\nimport './Chat.css'\nimport MessageForm from '../MessageForm/MessageForm'\nimport Message from '../Message/Message'\nimport { Grid } from '@material-ui/core'\nimport { connect } from 'react-redux'\n\nconst Chat = (props) => {\n    const { currentUser, isTyping, messages } = props\n    return (\n        <div className=\"ChatDiv\">\n            <Grid className=\"MessageGrid\">\n                <Message\n                    className=\"message\"\n                    isTyping={isTyping}\n                    messages={messages}\n                />\n            </Grid>\n            <MessageForm\n                currentUser={currentUser}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    messages: state.message.messages,\n    isTyping: state.message.isTyping,\n    currentUser: state.user.currentUser\n})\n\nexport default connect(mapStateToProps)(Chat)","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nclass Account extends React.Component {\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <div style={{ marginTop: '10px' }}>\n                    <img alt=\"drawerChatIcon\" src={currentUser.photoURL} style={{ height: '10vh' }} />\n                </div>\n                <div style={{ marginTop: '3vh' }}>\n                    Nume: {currentUser.name}\n                </div>\n                <div style={{ marginTop: '2vh' }}>\n                    Utilizator: {currentUser.username}\n                </div>\n                <div style={{ marginTop: '2vh' }}>\n                    Email: {currentUser.email}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    currentUser: state.user.currentUser\n  })\n\nexport default connect(mapStateToProps)(Account);\n","import React from 'react';\n\nclass SettingsItem extends React.Component {\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div>\n                Settings\n            </div>\n        )\n    }\n}\n\nexport default SettingsItem\n","import { EventEmitter } from 'fbemitter'\nconst STATIC = require('../statics/constants')\n\nclass ConceptStore {\n    constructor() {\n        this.categories = []\n        this.subcategories = []\n        this.emitter = new EventEmitter()\n        this.abortController = new AbortController()\n    }\n\n    async addCategory(category) {\n        try {\n            await fetch(`${STATIC.ngrokServer}/concepts/category`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(category)\n            })\n            this.emitter.emit('ADD_CATEGORY_SUCCESSFUL')\n        } catch(err) {\n            console.error(err)\n            this.emitter.emit('ADD_CATEGORY_ERROR')\n        }\n    }\n\n    async getAllCategories() {\n        try {\n            let response = await fetch(`${STATIC.ngrokServer}/concepts/categories`, { signal: this.abortController.signal })\n            let data = await response.json()\n            this.categories = data\n            this.emitter.emit('GET_ALL_CATEGORIES_SUCCESS')\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('GET_ALL_REVIEWS_ERROR')\n        }\n    }\n\n    async addSubcategory(subcategory, categoryId) {\n        try {\n            await fetch(`${STATIC.ngrokServer}/concepts/category/${categoryId}/subcategory`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(subcategory)\n            })\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('ADD_SUBCATEGORY_ERROR')\n        }\n    }\n\n    async getAllSubcategories() {\n        try {\n            let response = await fetch(`${STATIC.ngrokServer}/concepts/subcategories`, { signal: this.abortController.signal })\n            let data = await response.json()\n            this.subcategories = data\n            this.emitter.emit('GET_ALL_SUBCATEGORIES_SUCCESS')\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('GET_ALL_SUBCATEGORIES_ERROR')\n        }\n    }\n\n    async addExample(example, categoryId, subcategoryId) {\n        try {\n            await fetch(`${STATIC.ngrokServer}/concepts/category/${categoryId}/subcategory/${subcategoryId}/example`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(example)\n            })\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('ADD_EXAMPLE_ERROR')\n        }\n    }\n}\n\nexport default ConceptStore","import React from 'react'\nimport './CategoryForm.css'\nimport ConceptStore from '../../../dbStores/ConceptStore'\n\nclass CategoryForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            category: '',\n            categories: [],\n            selectedCategory: []\n        }\n\n        this.conceptStore = new ConceptStore()\n\n        this.handleChange = (evt) => {\n            this.setState({\n                [evt.target.name]: evt.target.value\n            })\n        }\n\n        this.add = () => {\n            this.conceptStore.addCategory({\n                category: this.state.category,\n            })\n\n            this.conceptStore.emitter.addListener('ADD_CATEGORY_SUCCESSFUL', () => {\n                window.location.reload(false)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"addCategoryHeader\">Add a category</div>\n                <div className=\"categoryForm\">\n                    <label className=\"categoryLabel\">Category</label>\n                    <input\n                        type=\"text\"\n                        name=\"category\"\n                        placeholder=\"category\"\n                        onChange={this.handleChange}\n                    />\n                    <button className=\"addCategoryButton\" onClick={this.add}>Add</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CategoryForm","import React from 'react'\nimport './SubcategoryForm.css'\nimport ConceptStore from './../../../dbStores/ConceptStore'\n\nclass SubcategoryForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            categories: [],\n            selectedCategoryId: '',\n            subcategory: ''\n        }\n\n        this.conceptStore = new ConceptStore()\n\n        this.handleCategorySelectChange = (evt) => {\n            this.setState({ selectedCategoryId: evt.target.value })\n        }\n\n        this.handleSubcategoryInputChange = (evt) => {\n            this.setState({ [evt.target.name]: evt.target.value })\n        }\n\n        this.add = () => {\n            let newSubcategory = {\n                subcategory: this.state.subcategory\n            }\n\n            this.conceptStore.addSubcategory(newSubcategory, this.state.selectedCategoryId)\n            window.location.reload(true)\n        }\n    }\n\n    componentDidMount() {\n        this.conceptStore.getAllCategories()\n        this.conceptStore.emitter.addListener('GET_ALL_CATEGORIES_SUCCESS', () => {\n            this.setState({\n                categories: this.conceptStore.categories\n            })\n        })\n    }\n\n    componentWillUnmount() {\n        this.conceptStore.abortController.abort()\n    }\n\n    render() {\n        const { categories } = this.state;\n\n        let categoriesList = categories.length > 0\n            && categories.map((item, i) => {\n                return (\n                    <option key={i} value={item.id}>{item.category}</option>\n                )\n            }, this);\n\n        return (\n            <div>\n                <div className=\"addSubcategoryHeader\">Add a subcategory</div>\n                <div className=\"subcategoryForm\">\n                    <label>Select a category</label>\n                    <select className=\"selectCategory\" onChange={this.handleCategorySelectChange} >\n                        <option value=\"value\">Select a category</option>\n                        {categoriesList}\n                    </select>\n                </div>\n\n                <div className=\"subcategoryForm\">\n                    <label className=\"subcategoryLabel\">Subcategory</label>\n                    <input type=\"text\" name=\"subcategory\" placeholder=\"subcategory\" onChange={this.handleSubcategoryInputChange} />\n                    <button className=\"addSubcategoryButton\" onClick={this.add}>Add</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default SubcategoryForm","import React from 'react'\nimport './ExampleForm.css'\nimport ConceptStore from '../../../dbStores/ConceptStore'\nimport { EventEmitter } from 'fbemitter'\n\nclass ExampleForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            categories: [],\n            selectedCategoryId: '',\n            subcategories: [],\n            selectedSubcategoryId: '',\n            example: ''\n        }\n\n        this.emitter = new EventEmitter()\n\n        this.conceptStore = new ConceptStore()\n\n        this.handleCategorySelectChange = (evt) => {\n            this.setState({selectedCategoryId: evt.target.value})\n        }\n\n        this.handleSubcategorySelectChange = (evt) => {\n            this.setState({selectedSubcategoryId: evt.target.value})\n        }\n\n        this.handleInputChange = (evt) => {\n            this.setState({[evt.target.name]: evt.target.value})\n        }\n\n        this.add = () => {\n            let newExample = {\n                example: this.state.example\n            }\n            console.log(newExample)\n\n            this.conceptStore.addExample(newExample, this.state.selectedCategoryId, this.state.selectedSubcategoryId)\n            window.location.reload(true)\n        }\n    }\n\n    componentDidMount() {\n        this.conceptStore.getAllCategories()\n        this.conceptStore.getAllSubcategories()\n        \n        this.conceptStore.emitter.addListener('GET_ALL_CATEGORIES_SUCCESS', () => {\n            this.setState({\n                categories: this.conceptStore.categories\n            })\n        })\n\n        this.emitter.emit('EXAMPLE_FORM_SUCCESSFUL_LOAD')\n        this.conceptStore.emitter.addListener('GET_ALL_SUBCATEGORIES_SUCCESS', () => {\n            this.setState({\n                subcategories: this.conceptStore.subcategories\n            })\n        })\n      }    \n\n      componentWillUnmount() {\n          this.conceptStore.abortController.abort()\n      }\n\n    render() {\n        const { categories, subcategories } = this.state;\n\n        let categoriesList = categories.length > 0\n            && categories.map((item, i) => {    \n            return (\n                <option key={i} value={item.id}>{item.category}</option>\n            )\n        }, this);\n        \n\n        let subcategoriesList = subcategories.length > 0\n            && subcategories.map((item, i) => {\n            return (\n                <option key={i} value={item.id}>{item.subcategory}</option>\n            )\n        }, this);\n\n        return (\n            <div>\n                <div className=\"addExamplesHeader\">Add examples</div>\n                <div className=\"subcategoryForm\">\n                    <label>Select a category</label>\n                    <select className=\"selectSubcategory\" onChange={ this.handleCategorySelectChange }>\n                    <option value=\"defaultValue\">Select a category</option>\n                        { categoriesList } \n                    </select>\n                </div>\n                \n                <div className=\"subcategoryForm\">\n                    <label>Select a subcategory</label>\n                    <select className=\"selectSubcategory\" onChange={ this.handleSubcategorySelectChange }> \n                        <option value=\"defaultValue\">Select a subcategory</option>\n                        { subcategoriesList }\n                    </select>\n                </div>\n                \n                <div className=\"exampleForm\">\n                    <label className=\"exampleLabel\">Example</label>\n                    <input type=\"text\" name=\"example\" placeholder=\"example\" onChange={ this.handleInputChange }/>\n                    <button className=\"addExampleButton\" onClick={ this.add }>Add</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default ExampleForm","import React from 'react'\nimport './ConceptsForm.css'\nimport CategoryForm from '../CategoryForm/CategoryForm'\nimport SubcategoryForm from '../SubcategoryForm/SubcategoryForm'\nimport ExampleForm from '../ExampleForm/ExampleForm'\n\nclass ConceptsForm extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"ConceptsForm\">\n                <CategoryForm />\n                <SubcategoryForm />\n                <ExampleForm />\n            </div>\n        )\n    }\n}\n\n\n\nexport default ConceptsForm","import React from 'react'\nimport {\n  AppBar,\n  CssBaseline,\n  Divider,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Chat from '../Chat/Chat/Chat'\nimport Account from './../Account/Account'\nimport SettingsItem from '../Settings/SettingsItem'\nimport ConceptsForm from '../AI/ConceptsForm/ConceptsForm'\nimport { connect } from 'react-redux'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      ...theme.mixins.toolbar,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Home(props) {\n  const { windows } = props\n  const { currentUser } = props\n  const classes = useStyles()\n  const theme = useTheme()\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [chatItem, setChatItem] = React.useState(true)\n  const [accountItem, setAccountItem] = React.useState(false)\n  const [settingsItem, setSettingsItem] = React.useState(false)\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n\n  const chatItemClicked = () => {\n    setChatItem(false)\n    setSettingsItem(false)\n    setChatItem(true)\n    if ({ mobileOpen }.mobileOpen) {\n      setMobileOpen(!mobileOpen)\n    }\n  }\n\n  const accountItemClicked = () => {\n    setChatItem(false)\n    setSettingsItem(false)\n    setAccountItem(true)\n    if ({ mobileOpen }.mobileOpen) {\n      setMobileOpen(!mobileOpen)\n    }\n  }\n\n  const settingsItemClicked = () => {\n    setAccountItem(false)\n    setChatItem(false)\n    setSettingsItem(true)\n    if ({ mobileOpen }.mobileOpen) {\n      setMobileOpen(!mobileOpen)\n    }\n  }\n\n  const aiItemClicked = () => {\n    setAccountItem(false)\n    setChatItem(false)\n    setSettingsItem(false)\n    if ({ mobileOpen }.mobileOpen) {\n      setMobileOpen(!mobileOpen)\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem('userToken')\n    window.location.reload()\n  }\n\n  const drawer = (\n    <div className=\"HomeDiv\">\n      <div />\n      <Divider />\n      \n      <List>\n      \n        <ListItem key=\"currentUserFullName\">\n          <ListItemIcon><img alt=\"drawerChatIcon\" src={currentUser.photoURL} style={{ height: '34px' }} /></ListItemIcon>\n          <ListItemText primary={currentUser.name}/>\n        </ListItem>\n        <Divider />\n        <ListItem button key='Chat' onClick={chatItemClicked}>\n          <ListItemIcon><img alt=\"drawerChatIcon\" src=\"https://img.icons8.com/bubbles/50/000000/chat.png\" style={{ height: '40px' }} /></ListItemIcon>\n          <ListItemText primary=\"Chat\" />\n        </ListItem>\n        <ListItem button key='Account' onClick={accountItemClicked}>\n          <ListItemIcon><img alt=\"drawerAccountIcon\" src=\"https://img.icons8.com/bubbles/50/000000/test-account.png\" style={{ height: '40px' }} /></ListItemIcon>\n          <ListItemText primary=\"Contul Meu\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <ListItem button key='AI' onClick={aiItemClicked}>\n        <ListItemIcon><img alt=\"drawerSettingsIcon\" src=\"https://img.icons8.com/bubbles/50/000000/learning.png\" style={{ height: '40px' }} /></ListItemIcon>\n        <ListItemText primary=\"AI\" />\n      </ListItem>\n      <ListItem button key='Logout' onClick={logout}>\n        <ListItemIcon><img alt=\"logoutIcon\" src=\"https://img.icons8.com/dusk/64/000000/logout-rounded-up.png\" style={{ height: '30px', marginLeft: '5px' }} /></ListItemIcon>\n        <ListItemText primary=\"Iesire\" />\n      </ListItem>\n    </div>\n  );\n\n  const container = windows !== undefined ? () => windows().document.body : undefined\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Elf Chat\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {\n          { chatItem }.chatItem ? <Chat /> :\n            { accountItem }.accountItem ? <Account /> :\n              { settingsItem }.settingsItem ? <SettingsItem /> :\n                <ConceptsForm />\n\n        }\n      </main>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\n\nexport default connect(mapStateToProps)(Home)\n","import React from 'react'\nimport './App.css'\nimport Home from '../Home/Home'\n\nconst App = () => (\n      <Home />\n)\n\nexport default App\n","import { EventEmitter } from 'fbemitter'\nconst STATIC = require('../statics/constants')\n\nclass UserStore {\n    constructor() {\n        this.users = []\n        this.loggedUser = ''\n        this.emitter = new EventEmitter()\n        this.responseStatus = ''\n        this.error = ''\n        this.token = ''\n    }\n    \n    async addUser(user) {\n        try {   \n            let response = await fetch(`${STATIC.ngrokServer}/chat/user`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(user)\n            })\n            let result = await response.json()\n            if(result.hasOwnProperty('errors')) {\n                this.error = result.errors[0].message\n                this.emitter.emit('USER_ADD_ERROR')\n            }\n            else {\n                this.emitter.emit('USER_ADD_SUCCESSFUL')\n                console.log('registration successful!')\n            }\n        } catch(err) {\n            this.error = await err.json()\n            this.emitter.emit('USER_ADD_ERROR')\n        }\n    }\n\n    async login(user) {\n        try {\n            let response = await fetch(`${STATIC.ngrokServer}/chat/login`, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(user)\n            })\n            if(response.status !== 500) {\n                let result = await response.json()\n                if(!result.hasOwnProperty('error')) {\n                    localStorage.setItem('userToken', result.tokenValue)\n                    this.token = result.tokenValue\n                    console.log('login successful!')\n                    this.emitter.emit('LOGIN_SUCCESSFUL')\n                }\n                else {\n                    this.error = result.error\n                    this.emitter.emit('LOGIN_ERROR')\n                }\n            }\n            else {\n                this.emitter.emit('LOGIN_ERROR')\n            }\n            \n        } catch(err) {\n            console.log(err)\n            this.emitter.emit('LOGIN_ERROR')\n        }\n    }\n\n    async getLoggedUser(userId) {\n        try {\n            let response = await fetch(`${STATIC.ngrokServer}/chat/user/${userId}`)\n            let user = await response.json()\n            this.loggedUser = user\n            this.emitter.emit(`GET_LOGGED_USER_SUCCESS`)\n        } catch(err) {\n            console.warn(err)\n            this.emitter.emit('GET_LOGGED_USER_ERROR')\n        }\n    }\n}\n\nexport default UserStore","import React, { Component } from 'react'\nimport UserStore from '../../dbStores/UserStore'\nimport {\n    Grid,\n    Container,\n    TextField,\n    Avatar,\n    Button,\n    CssBaseline,\n    Link,\n    Typography,\n    CircularProgress\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { blue } from '@material-ui/core/colors'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\n\nconst useStyles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    circularProgress: {\n        color: blue[500],\n        position: 'absolute',\n        top: '36%',\n        marginTop: -12,\n    }\n})\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            isValid: true,\n            isLoading: false,\n            error: '',\n            loginToken: ''\n        }\n\n        this.handleChange = (evt) => {\n            this.setState({\n                [evt.target.name]: evt.target.value\n            })\n        }\n\n        this.add = () => {\n            this.setState({\n                isLoading: true\n            })\n            let user = {\n                email: this.state.email,\n                password: this.state.password\n            }\n            this.userStore = new UserStore()\n            \n            this.userStore.login(user)\n            this.userStore.emitter.addListener('LOGIN_SUCCESSFUL', () => {\n                this.setState({\n                     isLoading: false,\n                     loginToken: this.userStore.token\n                })\n                window.location.reload(false)\n            })\n    \n            this.userStore.emitter.addListener('LOGIN_ERROR', () => {\n                this.setState({\n                    isValid: false,\n                    error: this.userStore.error,\n                    isLoading: false\n                })\n            })\n        }\n\n    }\n\n    render() {\n        const { classes } = this.props\n        const { isLoading, isValid, error } = this.state\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Autentificare\n              </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"email\"\n                                    size=\"small\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Parolă\"\n                                    size=\"small\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            { isValid ? <div></div> : \n                                <div style = {{marginLeft: '10px', color: 'red'}}>\n                                    { error }\n                                </div>\n                            }\n                        </Grid>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isLoading}\n                            className={classes.submit}\n                            onClick={this.add}\n                        >\n                            Autentificare\n                            {isLoading && <CircularProgress size={34} className={classes.circularProgress}/>}\n                </Button>\n                <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Ai uitat parola?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#/register\" variant=\"body2\">\n                {\"Nu ai cont? Înregistrează-te\"}\n              </Link>\n            </Grid>\n          </Grid>\n                    </form>\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Login)","import React, { Component } from 'react'\nimport UserStore from '../../dbStores/UserStore'\nimport {\n    Grid,\n    Container,\n    TextField,\n    Avatar,\n    Button,\n    CssBaseline,\n    Link,\n    Typography,\n    CircularProgress\n} from '@material-ui/core'\nimport { blue } from '@material-ui/core/colors'\nimport { withStyles } from '@material-ui/core/styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport md5 from 'md5'\n\n\nconst useStyles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    circularProgress: {\n        color: blue[500],\n        position: 'absolute',\n        top: '36%',\n        marginTop: -12,\n    }\n})\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            fullName: '',\n            username: '',\n            password: '',\n            confirmPassword: '',\n            email: '',\n            error: '',\n            isValid: true,\n            isLoading: false\n        }\n\n        this.userStore = new UserStore()\n\n        this.handleChange = (evt) => {\n            this.setState({\n                [evt.target.name]: evt.target.value\n            })\n        }\n\n        this.isPasswordValid = ({password, confirmPassword}) => {\n            if(password.length < 6) {\n                this.setState({\n                    error: 'Parola trebuie să aibă minim 6 caractere!'\n                })\n                return false\n            }\n            else if(password !== confirmPassword) {\n                this.setState({\n                    error: 'Parolele trebuie să fie identice!'\n                })\n                return false\n            }\n            else {\n                return true\n            }\n        }\n\n        this.add = () => {\n            this.setState({\n                isLoading: true\n            })\n            let user = {\n                name: this.state.fullName,\n                username: this.state.username,\n                password: this.state.password,\n                email: this.state.email,\n                photoURL: `http://gravatar.com/avatar/${md5(this.state.email)}?d=identicon`\n            }\n            console.log(user)\n\n            if(this.isPasswordValid(this.state)) {\n                this.userStore.addUser(user)\n                this.userStore.emitter.addListener('USER_ADD_SUCCESSFUL', () => {\n                    this.setState({\n                        isLoading: false\n                    })\n                    this.props.history.push('/login')\n                })\n    \n                this.userStore.emitter.addListener('USER_ADD_ERROR', () => {\n                    this.setState({\n                        isValid: false,\n                        error: this.userStore.error,\n                        isLoading: false\n                    })\n                })\n            }\n            else {\n                this.setState({\n                    isValid: false,\n                    isLoading: false\n                })\n            }\n        }\n\n    }\n\n    render() {\n        const { classes } = this.props\n        const { isValid, error, isLoading } = this.state\n        return (\n            <Container component=\"main\" maxWidth=\"xs\" >\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Înregistrare\n              </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"fullName\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"fullName\"\n                                    label=\"Nume Complet\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    size=\"small\"\n                                    id=\"username\"\n                                    label=\"Nume Utilizator\"\n                                    onChange={this.handleChange}\n                                    name=\"username\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    size=\"small\"\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    onChange={this.handleChange}\n                                    name=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    size=\"small\"\n                                    name=\"password\"\n                                    label=\"Parolă\"\n                                    type=\"password\"\n                                    onChange={this.handleChange}\n                                    id=\"password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    size=\"small\"\n                                    name=\"confirmPassword\"\n                                    label=\"Confirmă Parola\"\n                                    type=\"password\"\n                                    onChange={this.handleChange}\n                                    id=\"confirmPassword\"\n                                />\n                            </Grid>\n                            { isValid ? <div></div> : \n                                <div style = {{marginLeft: '10px', color: 'red'}}>\n                                    { error }\n                                </div>\n                            }\n                        </Grid>   \n                        \n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={isLoading}\n                                className={classes.submit}\n                                onClick={this.add}\n                            >\n                                Înregistrare\n                                {isLoading && <CircularProgress size={34} className={classes.circularProgress}/>} \n                       \n                            </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"#/login\" variant=\"body2\">\n                                    Ai deja cont? Autentifică-te!\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Register)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux'\nimport * as ActionTypes from '../actions/types'\nimport { Message } from 'react-chat-ui'\n\nconst initialUserState = {\n    currentUser: null,\n    isLoading: true\n}\n\nconst initialMessageState = {\n    messages: [],\n    context: null,\n    isTyping: false\n}\n\nconst userReducer = (state = initialUserState, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_USER:\n            return {\n                currentUser: action.payload.currentUser,\n                isLoading: false\n            }\n\n        case ActionTypes.CLEAR_USER:\n            return {\n                ...state,\n                isLoading: false\n            }\n        default:\n            return state\n    }\n}\n\nconst messageReducer = (state = initialMessageState, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_MESSAGE:\n            return {\n                ...state,\n                messages: state.messages.concat(new Message({ id: action.payload.chatBubbleId, message: action.payload.message })),\n                context: action.payload.context,\n                isTyping: action.payload.isTyping\n            }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    message: messageReducer\n})\n\nexport default rootReducer","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(1),\n        },\n        marginTop: '95%',\n        marginLeft: '10%',\n        marginBlockEnd: '20%'\n    },\n}))\n\nexport default function LinearBuffer() {\n    const classes = useStyles()\n    const [completed, setCompleted] = React.useState(0)\n    const [buffer, setBuffer] = React.useState(10)\n\n    const progress = React.useRef(() => { })\n    React.useEffect(() => {\n        progress.current = () => {\n            if (completed > 100) {\n                setCompleted(0)\n                setBuffer(10)\n            } else {\n                const diff = Math.random() * 10\n                const diff2 = Math.random() * 10\n                setCompleted(completed + diff)\n                setBuffer(completed + diff + diff2)\n            }\n        }\n    })\n\n    React.useEffect(() => {\n        function tick() {\n            progress.current()\n        }\n        const timer = setInterval(tick, 500)\n\n        return () => {\n            clearInterval(timer)\n        };\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\n            <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} color=\"secondary\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App/App';\nimport Login from './components/Auth/Login'\nimport Register from './components/Auth/Register'\nimport * as serviceWorker from './serviceWorker';\nimport checkForUserToken from './utils/checkLocalStorage'\nimport UserStore from './dbStores/UserStore'\nimport { HashRouter as Router, Switch, Route, withRouter } from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers/reducer'\nimport { setUser, clearUser, addMessage } from './actions/actions'\nimport LinearProgress from './components/LinearProgress/LinearProgress'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nclass Root extends React.Component {\n  componentDidMount() {\n    const userStore = new UserStore()\n    const userId = checkForUserToken()\n    if (userId) {\n      userStore.getLoggedUser(userId)\n      userStore.emitter.addListener('GET_LOGGED_USER_SUCCESS', () => {\n        let firstMessage = {\n          chatBubbleId: 1,\n          content: 'Salut ' + userStore.loggedUser.username + '! Eu sunt Tia, cu ce te pot ajuta?',\n          context: 'greet'\n        }\n        this.props.addMessage(firstMessage, false)\n        this.props.setUser(userStore.loggedUser)\n        this.props.history.push('/')\n      })\n    }\n    else {\n      this.props.history.push('/login')\n      this.props.clearUser()\n    }\n  }\n\n\n  render() {\n    return this.props.isLoading ? \n      <LinearProgress />\n      :\n      (\n        <Switch>\n          <Route path=\"/\" exact component={App} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.user.isLoading\n})\n\nconst RootWithAuth = withRouter(connect(mapStateToProps, { setUser, clearUser, addMessage })(Root))\n\nconst renderReactDom = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <RootWithAuth />\n      </Router>\n    </Provider>,\n    document.getElementById('root'))\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom()\n  }, false)\n}\nelse {\n  renderReactDom()\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = {\n    ngrokServer: 'http://127.0.0.1:8080',\n    tokenSecret: '*$9&1&bPsOGeu6Eu$a&&3bGeMd'\n}"],"sourceRoot":""}